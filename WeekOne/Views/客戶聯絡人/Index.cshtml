@model IEnumerable<WeekOne.Models.客戶聯絡人>

@{
    ViewBag.Title = "Index";
}

<h2>客戶聯絡人</h2>

<style>
    .ddl {
        display: inline;
        margin-right: 5px;
        width: 110px;
    }
</style>

<p>
    @using (Html.BeginForm("Search", "客戶聯絡人", FormMethod.Get))
    {
        <text>職稱：</text>
        @Html.DropDownList("title", (IEnumerable<SelectListItem>)ViewBag.職稱, new { @class = "ddl form-control" })
        <input type="submit" value="篩選" class="btn btn-default" />
    }
</p>

<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.職稱)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.姓名)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.手機)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.電話)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.客戶資料.客戶名稱)
        </th>
        <th>
            @Html.ActionLink("新增", "Create", null, new { @class = "btn btn-default" })
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.職稱)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.姓名)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.手機)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.電話)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.客戶資料.客戶名稱)
        </td>
        <td>
            @Html.ActionLink("編輯", "Edit", new { id=item.Id }, new { @class = "btn btn-default" })
            &nbsp;
            @Html.ActionLink("明細", "Details", new { id=item.Id }, new { @class = "btn btn-default" })
            &nbsp;
            @Html.ActionLink("刪除", "Delete", new { id=item.Id }, new { @class = "btn btn-default" })
        </td>
    </tr>
}

</table>
